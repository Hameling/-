# Generated by Django 2.1.7 on 2019-05-05 01:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Calender',
            fields=[
                ('indexnumber', models.AutoField(db_column='indexNumber', primary_key=True, serialize=False)),
                ('startdate', models.DateField(db_column='startDate')),
                ('starttime', models.DateTimeField(db_column='startTime')),
                ('duedate', models.DateField(db_column='dueDate')),
                ('duetime', models.DateTimeField(db_column='dueTime')),
                ('isoverlap', models.TextField(db_column='isOverlap')),
            ],
            options={
                'db_table': 'Calender',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('listnumber', models.AutoField(db_column='listNumber', primary_key=True, serialize=False)),
                ('listname', models.CharField(db_column='listName', max_length=45)),
            ],
            options={
                'db_table': 'CheckList',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comnumber', models.AutoField(db_column='comNumber', primary_key=True, serialize=False)),
                ('comcomment', models.CharField(db_column='comComment', max_length=45)),
            ],
            options={
                'db_table': 'Comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('contentid', models.CharField(db_column='contentId', max_length=45, primary_key=True, serialize=False)),
                ('contentname', models.CharField(blank=True, db_column='contentName', max_length=45, null=True)),
                ('contentinfo', models.CharField(blank=True, db_column='contentInfo', max_length=200, null=True)),
                ('iscomment', models.TextField(blank=True, db_column='isComment', null=True)),
                ('ischecklist', models.TextField(blank=True, db_column='isCheckList', null=True)),
                ('contentpos', models.IntegerField(db_column='contentPos')),
                ('contentheight', models.IntegerField(db_column='contentHeight')),
            ],
            options={
                'db_table': 'Content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contentstate',
            fields=[
                ('statenumber', models.IntegerField(db_column='StateNumber', primary_key=True, serialize=False)),
                ('statename', models.CharField(db_column='StateName', max_length=45)),
            ],
            options={
                'db_table': 'ContentState',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('fileaddress', models.CharField(db_column='fileAddress', max_length=45, primary_key=True, serialize=False)),
                ('filename', models.CharField(blank=True, db_column='fileName', max_length=45, null=True)),
                ('fileformat', models.CharField(blank=True, db_column='fileFormat', max_length=45, null=True)),
                ('fileid', models.IntegerField(db_column='fileId')),
            ],
            options={
                'db_table': 'File',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('memberid', models.CharField(db_column='memberId', max_length=45, primary_key=True, serialize=False)),
                ('membername', models.CharField(db_column='memberName', max_length=45)),
                ('memberpwd', models.CharField(db_column='memberPwd', max_length=45)),
            ],
            options={
                'db_table': 'Member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('sectionid', models.CharField(db_column='sectionId', max_length=45, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Section',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('titleid', models.CharField(db_column='titleId', max_length=45, primary_key=True, serialize=False)),
                ('titlename', models.CharField(db_column='titleName', max_length=45)),
                ('titleinfo', models.CharField(db_column='titleInfo', max_length=100)),
            ],
            options={
                'db_table': 'Title',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assign',
            fields=[
                ('memberid', models.ForeignKey(db_column='memberId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='posts.Member')),
            ],
            options={
                'db_table': 'Assign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Enroll',
            fields=[
                ('memberid', models.ForeignKey(db_column='memberId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='posts.Member')),
            ],
            options={
                'db_table': 'Enroll',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('priority', models.IntegerField()),
                ('memberid', models.ForeignKey(db_column='memberId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='posts.Assign')),
                ('permissionid', models.IntegerField(db_column='PermissionId')),
            ],
            options={
                'db_table': 'Permission',
                'managed': False,
            },
        ),
    ]
